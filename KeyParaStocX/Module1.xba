<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">Option Explicit

&apos;  https://wiki.openoffice.org/wiki/Documentation/DevGuide/Text/Overall_Document_Features
&apos;  https://wiki.openoffice.org/wiki/Documentation/BASIC_Guide/Editing_Text_Documents
&apos;  https://wiki.openoffice.org/wiki/Extensions_development_basic
&apos;  https://wiki.openoffice.org/wiki/Documentation/How_Tos/Regular_Expressions_in_Writer
&apos;  https://www.openoffice.org/api/docs/common/ref/com/sun/star/style/ParagraphProperties.html#ParaStyleName
&apos;  https://forum.openoffice.org//en/forum/viewtopic.php?f=45&amp;t=21732
&apos;  https://wiki.openoffice.org/wiki/Documentation/DevGuide/Extensions/Extensions
&apos;  https://wiki.openoffice.org/wiki/Extensions
&apos;  https://www.openoffice.org/api/docs/common/ref/com/sun/star/text/ContentIndex.html
&apos;  https://www.openoffice.org/api/docs/common/ref/com/sun/star/text/BaseIndex.html
&apos;  https://wiki.documentfoundation.org/Development/Create_a_Hello_World_LibreOffice_extension
&apos;  https://wiki.openoffice.org/wiki/Extensions_development

Dim Doc as object
Dim replaceDesc as object
Dim find as object
Dim i as Integer
Dim f as object
Dim Cursor as object
Dim DocIndices as object
Dim hasIndex as Boolean
Dim DocIndex as object

Sub Main

	&apos; first, change the words, then make new paragraphs (in the Articles)
	ChangeWordParaStyle (&quot;Część&quot;   , &quot;Nagłówek 1&quot;)
	ChangeWordParaStyle (&quot;Księga&quot;  , &quot;Nagłówek 2&quot;)
	ChangeWordParaStyle (&quot;Tytuł&quot;   , &quot;Nagłówek 3&quot;)
	ChangeWordParaStyle (&quot;Dział&quot;   , &quot;Nagłówek 4&quot;)
	ChangeWordParaStyle (&quot;Rozdział&quot;, &quot;Nagłówek 5&quot;)
	ChangeWordParaStyle (&quot;Oddział&quot; , &quot;Nagłówek 6&quot;)
	ChangeArticles
	AddTableOfContents

	msgbox &quot;Done :)&quot;

End Sub

Sub ChangeWordParaStyle (theWord as string, newStyle as string)

	Doc = ThisComponent

	replaceDesc = Doc.createReplaceDescriptor
	replaceDesc.searchRegularExpression = True
	replaceDesc.searchCaseSensitive = True
	replaceDesc.SearchAll = True
	&apos; &quot;\&gt;&quot; = the end of a word
	&apos; the tab is also needed, despite the \t
	replaceDesc.searchString = &quot;^[ \t\s	]*&quot; &amp; theWord &amp; &quot;\&gt;&quot;

	&apos; &quot;replaceAll&quot; doesn&apos;t work - cannot change the paragraph style
	find = doc.FindAll (replaceDesc)
	For i = 0 to find.Count - 1

		f = find.getByIndex (i)
		f.ParaStyleName = newStyle

	Next

End Sub

Sub ChangeArticles

	Doc = ThisComponent

	replaceDesc = Doc.createReplaceDescriptor
	replaceDesc.searchRegularExpression = True
	replaceDesc.searchCaseSensitive = True
	replaceDesc.SearchAll = True
	replaceDesc.searchString = &quot;^[ \t\s	]*Art\.[ \t\s	]+[0-9]+[a-zA-Z]*\.?[ \t\s	]+(\[([^\]])+\])&quot;

	&apos; &quot;replaceAll&quot; doesn&apos;t work - cannot change the paragraph style
	find = doc.FindAll (replaceDesc)
	Cursor = Doc.Text.createTextCursor
	For i = 0 to find.Count - 1

		f = find.getByIndex (i)
		&apos; If a Paragraph is in a table, it generates problems,
		&apos; but we don&apos;t need to process it anyway, so we skip.
		If IsEmpty (f.Cell) Then
			Cursor.gotoRange (f.end, False)
			Doc.Text.insertControlCharacter (Cursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)
			f.ParaStyleName = &quot;Nagłówek 7&quot;
		End If

	Next

	If find.Count = 0 Then

		&apos; no Articles found - change the Paragraphs instead
		replaceDesc = Doc.createReplaceDescriptor
		replaceDesc.searchRegularExpression = True
		replaceDesc.searchCaseSensitive = True
		replaceDesc.SearchAll = True
		replaceDesc.searchString = &quot;^[ \t\s	]*§[ \t\s	]*[0-9]+[a-zA-Z]*\.?([ \t\s	]+(\[([^\]])+\]))?&quot;

		&apos; &quot;replaceAll&quot; doesn&apos;t work - cannot change the paragraph style
		find = doc.FindAll (replaceDesc)
&apos;		Cursor = Doc.Text.createTextCursor
		For i = 0 to find.Count - 1

			f = find.getByIndex (i)
			&apos; If a Paragraph is in a table, it generates problems,
			&apos; but we don&apos;t need to process it anyway, so we skip.
			If IsEmpty (f.Cell) Then
				Cursor.gotoRange (f.end, False)
				Doc.Text.insertControlCharacter (Cursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)
				f.ParaStyleName = &quot;Nagłówek 7&quot;
			End If

		Next

	End If

End Sub

Sub AddTableOfContents

	Doc = ThisComponent
	Cursor = Doc.Text.createTextCursor

	DocIndices = Doc.getDocumentIndexes ()
	hasIndex = False

	&apos; check if a Table of Contents already exists
	For i = 0 to DocIndices.getCount () - 1

		DocIndex = DocIndices.getByIndex (i)
		If DocIndex.supportsService (&quot;com.sun.star.text.ContentIndex&quot;) Then

			hasIndex = True
			Exit For

		End If

	Next

	If Not hasIndex Then

		&apos; no Table of Contents - add a new one
		DocIndex = Doc.createInstance (&quot;com.sun.star.text.ContentIndex&quot;)
		Cursor.gotoStart (False)
		DocIndex.createFromOutline = True
		DocIndex.IsProtected = False
		Doc.Text.insertTextContent (Cursor, DocIndex, False)
		&apos; cannot insert a page break, so we set that the Cursor inserts it
		&apos; and we input anything in the Cursor (a new paragraph is neutral)
		Cursor.BreakType = com.sun.star.style.BreakType.PAGE_AFTER
		Doc.Text.insertControlCharacter (Cursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)

		&apos; number the pages after the ToC from 1
		Cursor.PageDescName = Cursor.PageStyleName
		Cursor.gotoStartOfParagraph (False)
		Cursor.gotoEndOfParagraph (True)
		Cursor.PageNumberOffset = 1

	End If

	&apos; need to do this twice, otherwise the page numbers are wrong
	DocIndex.update ()
	DocIndex.update ()

End Sub


</script:module>